language: python
sudo: false
cache: pip
python:
  - 2.7
  - 3.3
  - 3.4
  - 3.5
env:
  matrix:
    - DJANGO="Django<1.8,>=1.7"
    - DJANGO="Django<1.8,>=1.7" DB_ENGINE="django.db.backends.postgresql_psycopg2" DB_NAME="test_project" DB_USER="postgres"
    - DJANGO="Django<1.8,>=1.7" DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
    - DJANGO="Django<1.9,>=1.8"
    - DJANGO="Django<1.9,>=1.8" DB_ENGINE="django.db.backends.postgresql_psycopg2" DB_NAME="test_project" DB_USER="postgres"
    - DJANGO="Django<1.9,>=1.8" DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
    - DJANGO="-e git+https://github.com/django/django.git@master#egg=Django"
    - DJANGO="-e git+https://github.com/django/django.git@master#egg=Django" DB_ENGINE="django.db.backends.postgresql_psycopg2" DB_NAME="test_project" DB_USER="postgres"
    - DJANGO="-e git+https://github.com/django/django.git@master#egg=Django" DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
matrix:
  fast_finish: true
services:
  - postgresql
  - mysql
install:
  - travis_retry pip install $DJANGO
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql_psycopg2" ]] ; then travis_retry pip install psycopg2; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.mysql" ]] ; then travis_retry pip install mysqlclient ; fi
  - python setup.py -q install
before_script:
  - if [[ "$DB_ENGINE" == "django.db.backends.mysql" ]] ; then mysql -e 'create database test_project'; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql_psycopg2" ]] ; then psql -c 'create database test_project;' -U postgres; fi
script: python src/tests/runtests.py
notifications:
  email: false
